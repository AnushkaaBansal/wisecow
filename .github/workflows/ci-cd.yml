name: Wisecow CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: wisecow
  KUBE_NAMESPACE: wisecow
  KUBERNETES_VERSION: v1.26.4
  IMAGE_TAG: latest

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      run: |
        echo "=== Building Docker Image ==="
        docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
        docker images
    
    - name: Test Docker image
      run: |
        echo "=== Testing Docker Image ==="
        
        # Start the container
        docker run -d --name wisecow-test -p 4499:4499 ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        
        # Wait for the container to be ready (up to 30 seconds)
        echo "Waiting for container to be ready..."
        for i in {1..30}; do
          if docker logs wisecow-test 2>&1 | grep -q "Listening"; then
            echo "Container is ready!"
            break
          fi
          if [ $i -eq 30 ]; then
            echo "Timed out waiting for container to be ready"
            docker logs wisecow-test
            exit 1
          fi
          sleep 1
        done
        
        # Test the application
        echo "Testing application..."
        if ! curl -s http://localhost:4499 | grep -q "Wisecow"; then
          echo "Application test failed! Container logs:"
          docker logs wisecow-test
          exit 1
        fi
        
        # Clean up
        echo "Cleaning up..."
        docker stop wisecow-test || true
        docker rm wisecow-test || true
        
        echo "=== Docker image test passed ==="
    
    - name: Set up Kind Cluster
      run: |
        # Install Kind
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/kind
        
        # Create cluster with default config
        kind create cluster --wait 5m
        
        # Verify cluster
        kubectl cluster-info
        kubectl get nodes
    
    - name: Deploy to Kind
      run: |
        # Create namespace
        kubectl create namespace ${{ env.KUBE_NAMESPACE }} --dry-run=client -o yaml | kubectl apply -f -
        
        # Install ingress-nginx
        kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
        
        # Wait for ingress-nginx to be ready
        kubectl wait --namespace ingress-nginx \
          --for=condition=ready pod \
          --selector=app.kubernetes.io/component=controller \
          --timeout=300s
        
        # Load local image into Kind
        kind load docker-image ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        
        # Apply application manifests
        kubectl apply -f k8s/ -n ${{ env.KUBE_NAMESPACE }}
        
        # Wait for deployment
        kubectl wait --for=condition=available --timeout=300s deployment/wisecow -n ${{ env.KUBE_NAMESPACE }}
        
        # Show resources
        kubectl get all -n ${{ env.KUBE_NAMESPACE }}
    
    - name: Test Deployment
      run: |
        # Get pod name
        POD_NAME=$(kubectl get pods -n ${{ env.KUBE_NAMESPACE }} -l app=wisecow -o jsonpath="{.items[0].metadata.name}")
        
        # Test application
        kubectl exec -n ${{ env.KUBE_NAMESPACE }} $POD_NAME -- curl -s http://localhost:4499 | grep -q "Wisecow"
        
        echo "=== Application is running successfully ==="
        
        # Clean up
        echo "=== Cleaning up test resources ==="
        kubectl delete -f k8s/ -n ${{ env.KUBE_NAMESPACE }} --ignore-not-found=true
        kind delete cluster --wait 5m
